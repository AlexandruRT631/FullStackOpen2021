{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/Person.js","components/DeletePerson.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","newSearch","onChange","handleSearchChange","PersonForm","newName","handleNameChange","newNumber","handleNumberChange","type","onClick","addPerson","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","deletePerson","delete","DeletePerson","window","confirm","person","name","setMessageStyle","setMessage","setTimeout","persons","setPersons","Person","number","DeletePersons","Persons","filter","toLowerCase","includes","map","Notification","message","className","messageStyle","App","useState","setNewName","setNewNumber","setNewSearch","useEffect","initialPersons","event","target","preventDefault","newPerson","indexPerson","indexOf","addedPerson","concat","returnedPerson","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8c08f4e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <form>\r\n            <div>\r\n                filter shown with <input value={props.newSearch} onChange={props.handleSearchChange}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form>\r\n            <div>\r\n                name: <input value={props.newName} onChange={props.handleNameChange}/>\r\n            </div>\r\n            <div>\r\n                number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\" onClick={props.addPerson}>add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newNumber) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newNumber)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst personService = { getAll, create, update, deletePerson }\r\n\r\nexport default personService","import personService from '../services/Person'\r\n\r\nconst DeletePerson = (props) => {\r\n    if (window.confirm(`Delete ${props.person.name} ?`)) {\r\n        personService\r\n            .deletePerson(props.person.id)\r\n            .then(() => {\r\n                props.setMessageStyle('success')\r\n                props.setMessage(\r\n                    `Information of ${props.person.name} was removed`\r\n                )\r\n                setTimeout(() => {\r\n                    props.setMessage(null)\r\n                }, 5000)\r\n                personService\r\n                    .getAll()\r\n                    .then(persons => {\r\n                        props.setPersons(persons)\r\n                    })\r\n            })\r\n    }\r\n}\r\n\r\nexport default DeletePerson","import React from \"react\";\r\nimport DeletePersons from './DeletePerson'\r\n\r\nconst Person = (props) => {\r\n    return (\r\n        <li>\r\n            {props.person.name} {props.person.number}\r\n            <button onClick={() => DeletePersons(props)}>delete</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst Persons = (props) => {\r\n    return (\r\n        <ul>\r\n            {\r\n                props.persons\r\n                    .filter(person => person.name.toLowerCase().includes(props.newSearch.toLowerCase()) === true)\r\n                    .map(person => <Person key={person.name} person={person} setPersons={props.setPersons}\r\n                                           setMessage={props.setMessage} setMessageStyle={props.setMessageStyle}/>)\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from \"react\";\r\n\r\nconst Notification = (props) => {\r\n    if (props.message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={props.messageStyle}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, {useState, useEffect} from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/Person'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [newSearch, setNewSearch] = useState('')\n    const [message, setMessage] = useState(null)\n    const [messageStyle, setMessageStyle] = useState('success')\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const newPerson = {\n            name: newName,\n            number: newNumber\n        }\n\n        const indexPerson = persons.map(persons => persons.name.toLowerCase()).indexOf(newPerson.name.toLowerCase())\n\n        if (indexPerson === -1) {\n            personService\n                .create(newPerson)\n                .then(addedPerson => {\n                    setPersons(persons.concat(addedPerson))\n                })\n            setMessageStyle('success')\n            setMessage(\n                `Added ${newPerson.name}`\n            )\n            setTimeout(() => {\n                setMessage(null)\n            }, 5000)\n        } else {\n            if (window.confirm(`${newPerson.name} is already added to the phonebook, replace the old number with a new one?`)) {\n                personService\n                    .update(persons[indexPerson].id, newPerson)\n                    .then(returnedPerson => {\n                        setPersons(persons.map(person => person.id !== persons[indexPerson].id ? person : returnedPerson))\n                        setMessageStyle('success')\n                        setMessage(\n                            `${newPerson.name}'s number has been changed`\n                        )\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 5000)\n                    })\n                    .catch(() => {\n                        personService\n                            .getAll()\n                            .then(persons => {\n                                setPersons(persons)\n                            })\n                        setMessageStyle('error')\n                        setMessage(\n                            `Information of ${newPerson.name} has already been removed from server`\n                        )\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 8000)\n                    })\n            }\n        }\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n    const handleSearchChange = (event) => {\n        setNewSearch(event.target.value)\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} messageStyle={messageStyle}/>\n            <Filter newSearch={newSearch} handleSearchChange={handleSearchChange}/>\n            <h2>Add a new</h2>\n            <PersonForm newName={newName} handleNameChange={handleNameChange} newNumber={newNumber}\n                        handleNumberChange={handleNumberChange} addPerson={addPerson}/>\n            <h2>Numbers</h2>\n            <Persons persons={persons} newSearch={newSearch} setPersons={setPersons}\n                     setMessage={setMessage} setMessageStyle={setMessageStyle}/>\n        </div>\n    )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}